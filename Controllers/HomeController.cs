using Microsoft.AspNetCore.Mvc;
using PhoneBook.AutoGenerated;
using PhoneBook.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace PhoneBook.Controllers
{
    public class HomeController : Controller
    {
        private postgresContext _context;

        public HomeController(postgresContext context)
        {
            _context = context;
        }
        public IActionResult Index(string name,string number)
        {
            var query = _context.Phones.OrderBy(u => u.PhoneId).Select(user => new UserViewModel
            {
                Id=user.PhoneId,
                Name=user.PhoneName,
                Number=user.PhoneNumber
            });
            if (!String.IsNullOrEmpty(name))
            {
                query = query.Where(s => s.Name.Contains(name));
            }
            else if (!String.IsNullOrEmpty(number))
            {
                query = query.Where(s => s.Number.Contains(number));
            }
            return View(query);
        }
        public IActionResult Add()
        {
            return View();
        }
        public IActionResult Edit(int id)
        {
            var phone = _context.Phones.Find(id);
            UserViewModel model = new UserViewModel()
            {
                Id = phone.PhoneId,
                Name=phone.PhoneName,
                Number=phone.PhoneNumber
            };
            return View(phone);
        }
        public IActionResult Delete(int id)
        {
            var query1 = _context.Phones.Find(id);
            if (query1 != null)
            {
                _context.Phones.Remove(query1);
                _context.SaveChanges();
            }
            return RedirectToAction("Index");
        }
        [HttpPost]
        public ActionResult Edit(UserEditViewModel phone)
        {
            var _phone = _context.Phones.Where(s => s.PhoneId == phone.Id).FirstOrDefault();
            _phone.PhoneName = phone.Name;
            _phone.PhoneId = phone.Id;
            _phone.PhoneNumber = phone.Number;
            _context.SaveChanges();
            return RedirectToAction("Index");
        }
        [HttpPost]
        public ActionResult Add(UserEditViewModel model)
        {
            var _phone = new Phone
            {
                PhoneId=model.Id,
                PhoneName=model.Name,
                PhoneNumber=model.Number
            };
            _context.Phones.Add(_phone);
            _context.SaveChanges();

            return RedirectToAction("Index");
        }
    }
}
